// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Rbl.Models
{
    public partial class RBLContext : DbContext
    {
        public RBLContext()
        {
        }

        public RBLContext(DbContextOptions<RBLContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<ScoresAll_2021> ScoresAll_2021 { get; set; }
        public virtual DbSet<ScoresAll_2022> ScoresAll_2022 { get; set; }
        public virtual DbSet<ScoresByIndustry_2021> ScoresByIndustry_2021 { get; set; }
        public virtual DbSet<ScoresByIndustry_2022> ScoresByIndustry_2022 { get; set; }
        public virtual DbSet<ScoresByTicker_2021> ScoresByTicker_2021 { get; set; }
        public virtual DbSet<ScoresByTicker_2022> ScoresByTicker_2022 { get; set; }
        public virtual DbSet<ScoresTopTen_2021> ScoresTopTen_2021 { get; set; }
        public virtual DbSet<ScoresTopTen_2022> ScoresTopTen_2022 { get; set; }
        public virtual DbSet<ScoresTotal_2021> ScoresTotal_2021 { get; set; }
        public virtual DbSet<ScoresTotal_2022> ScoresTotal_2022 { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<ScoresAll_2021>(entity =>
            {
                entity.ToView("ScoresAll_2021");
            });

            modelBuilder.Entity<ScoresAll_2022>(entity =>
            {
                entity.ToView("ScoresAll_2022");
            });

            modelBuilder.Entity<ScoresByIndustry_2021>(entity =>
            {
                entity.ToView("ScoresByIndustry_2021");
            });
            modelBuilder.Entity<ScoresByIndustry_2022>(entity =>
            {
                entity.ToView("ScoresByIndustry_2022");
            });

            modelBuilder.Entity<ScoresByTicker_2021>(entity =>
            {
                entity.ToView("ScoresByTicker_2021");
            });
            modelBuilder.Entity<ScoresByTicker_2022>(entity =>
            {
                entity.ToView("ScoresByTicker_2022");
            });

            modelBuilder.Entity<ScoresTopTen_2021>(entity =>
            {
                entity.ToView("ScoresTopTen_2021");
            });
            modelBuilder.Entity<ScoresTopTen_2022>(entity =>
            {
                entity.ToView("ScoresTopTen_2022");
            });

            modelBuilder.Entity<ScoresTotal_2021>(entity =>
            {
                entity.ToView("ScoresTotal_2021");
                entity.Property(x => x.TotalScore).HasColumnName("total_score");
                entity.Property(x => x.Ticker).HasColumnName("ticker");
            });

            modelBuilder.Entity<ScoresTotal_2022>(entity =>
            {
                entity.ToView("ScoresTotal_2022");
                entity.Property(x => x.TotalScore).HasColumnName("total_score");
                entity.Property(x => x.Ticker).HasColumnName("ticker");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}