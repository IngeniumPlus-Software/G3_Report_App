// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Rbl.Models
{
    public partial class RBLContext : DbContext
    {
        public RBLContext()
        {
        }

        public RBLContext(DbContextOptions<RBLContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<ScoresAll> ScoresAll { get; set; }
        public virtual DbSet<ScoresByIndustry> ScoresByIndustry { get; set; }
        public virtual DbSet<ScoresByTicker> ScoresByTicker { get; set; }
        public virtual DbSet<ScoresTopTen> ScoresTopTen { get; set; }
        public virtual DbSet<WordlistHr> WordlistHrs { get; set; }
        public virtual DbSet<WordlistLeadership> WordlistLeaderships { get; set; }
        public virtual DbSet<WordlistOrganization> WordlistOrganizations { get; set; }
        public virtual DbSet<WordlistTalent> WordlistTalents { get; set; }
        public virtual DbSet<DfAllRatiosAvailable> DfAllRatiosAvailables { get; set; }
        public virtual DbSet<DfSentence> DfSentences { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<ScoresAll>(entity =>
            {
                entity.ToView("ScoresAll");
            });

            modelBuilder.Entity<ScoresByIndustry>(entity =>
            {
                entity.ToView("ScoresByIndustry");
            });

            modelBuilder.Entity<ScoresByTicker>(entity =>
            {
                entity.ToView("ScoresByTicker");
            });

            modelBuilder.Entity<ScoresTopTen>(entity =>
            {
                entity.ToView("ScoresTopTen");
            });

            modelBuilder.Entity<WordlistHr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("wordlist_hr");

                entity.Property(e => e.Column1)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("column1");

                entity.Property(e => e.Word)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<WordlistLeadership>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("wordlist_leadership");

                entity.Property(e => e.Column1)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("column1");

                entity.Property(e => e.Word)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<WordlistOrganization>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("wordlist_organization");

                entity.Property(e => e.Column1)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("column1");

                entity.Property(e => e.Word)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<WordlistTalent>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("wordlist_talent");

                entity.Property(e => e.Column1)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("column1");

                entity.Property(e => e.Word)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<DfAllRatiosAvailable>(entity =>
            {
                entity.ToTable("df_all_ratios_available");

                entity.HasIndex(e => e.Ticker, "idx_ticker");

                entity.Property(e => e.AccessionNumber)
                    .HasMaxLength(255)
                    .HasColumnName("accession_number");

                entity.Property(e => e.Agility).HasColumnName("agility");

                entity.Property(e => e.Beta).HasColumnName("beta");

                entity.Property(e => e.BookValue).HasColumnName("bookValue");

                entity.Property(e => e.Capability).HasColumnName("capability");

                entity.Property(e => e.Cik).HasColumnName("cik");

                entity.Property(e => e.Competence).HasColumnName("competence");

                entity.Property(e => e.Culture).HasColumnName("culture");

                entity.Property(e => e.CurrentPrice).HasColumnName("currentPrice");

                entity.Property(e => e.DebtToEquity).HasColumnName("debtToEquity");

                entity.Property(e => e.Develop).HasColumnName("develop");

                entity.Property(e => e.EbitdaMargins).HasColumnName("ebitdaMargins");

                entity.Property(e => e.Embedding).HasColumnName("embedding");

                entity.Property(e => e.Employee).HasColumnName("employee");

                entity.Property(e => e.FilingDate)
                    .HasColumnType("datetime")
                    .HasColumnName("filing_date");

                entity.Property(e => e.ForwardPe).HasColumnName("forwardPE");

                entity.Property(e => e.Fraud).HasColumnName("fraud");

                entity.Property(e => e.FullTimeEmployees).HasColumnName("fullTimeEmployees");

                entity.Property(e => e.Hc).HasColumnName("hc");

                entity.Property(e => e.HcParagraphs).HasColumnName("hc_paragraphs");

                entity.Property(e => e.HcSentences).HasColumnName("hc_sentences");

                entity.Property(e => e.HeldPercentInstitutions).HasColumnName("heldPercentInstitutions");

                entity.Property(e => e.Hr).HasColumnName("hr");

                entity.Property(e => e.Leadership).HasColumnName("leadership");

                entity.Property(e => e.Litigious).HasColumnName("litigious");

                entity.Property(e => e.Management).HasColumnName("management");

                entity.Property(e => e.MarketCap).HasColumnName("marketCap");

                entity.Property(e => e.Mdna).HasColumnName("mdna");

                entity.Property(e => e.Mission).HasColumnName("mission");

                entity.Property(e => e.NumberOfAnalystOpinions).HasColumnName("numberOfAnalystOpinions");

                entity.Property(e => e.Organization).HasColumnName("organization");

                entity.Property(e => e.PegRatio).HasColumnName("pegRatio");

                entity.Property(e => e.PriceToBook).HasColumnName("priceToBook");

                entity.Property(e => e.RecommendationKey)
                    .HasMaxLength(255)
                    .HasColumnName("recommendationKey");

                entity.Property(e => e.RecommendationMean).HasColumnName("recommendationMean");

                entity.Property(e => e.ReturnOnEquity).HasColumnName("returnOnEquity");

                entity.Property(e => e.RevenueGrowth).HasColumnName("revenueGrowth");

                entity.Property(e => e.RevenuePerEmployee).HasColumnName("revenuePerEmployee");

                entity.Property(e => e.Talent).HasColumnName("talent");

                entity.Property(e => e.Text).HasColumnName("text");

                entity.Property(e => e.Ticker)
                    .HasMaxLength(255)
                    .HasColumnName("ticker");

                entity.Property(e => e.TotalRevenue).HasColumnName("totalRevenue");

                entity.Property(e => e.TrailingEps).HasColumnName("trailingEps");

                entity.Property(e => e.Vision).HasColumnName("vision");
            });

            modelBuilder.Entity<DfSentence>(entity =>
            {
                entity.ToTable("df_sentences");

                entity.HasIndex(e => e.Ticker, "idx_sentence_ticker");

                entity.Property(e => e.HrSentences).HasColumnName("hr_sentences");

                entity.Property(e => e.LeadershipSentences).HasColumnName("leadership_sentences");

                entity.Property(e => e.OrganizationSentences).HasColumnName("organization_sentences");

                entity.Property(e => e.TalentSentences).HasColumnName("talent_sentences");

                entity.Property(e => e.Ticker)
                    .HasMaxLength(255)
                    .HasColumnName("ticker");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}